version: '3'
services:
    web:
        container_name: health_care
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '5005:5005'
        depends_on:
            - redis
            - postgres
        networks:
            - app-network
        environment:
            - ENV=${ENV}
            - POSTGRES_URL_MASTER=${POSTGRES_URL_MASTER}
            - POSTGRES_URL_SLAVE=${POSTGRES_URL_SLAVE}
            - POSTGRES_URL_ELAMBIC=${POSTGRES_URL_ELAMBIC}
            - BROKER_URL=${BROKER_URL}
            - REDIS_URL=${REDIS_URL}
            - REDIS_URL_WORKING_TIME=${REDIS_URL_WORKING_TIME}
            - PORT=${PORT}
            - ACCESS_TOKEN=${ACCESS_TOKEN}
            - REFRESH_TOKEN=${REFRESH_TOKEN}
            - ALGORITHM=${ALGORITHM}
            - PREFIX_URL=${PREFIX_URL}
            - ACCOUNT_SID=${ACCOUNT_SID}
            - AUTH_TOKEN=${AUTH_TOKEN}
            - S3_BUCKET=${S3_BUCKET}
            - S3_KEY=${S3_KEY}
            - S3_SECRET=${S3_SECRET}
            - REGION=${REGION}
            - S3_ENDPOINT=${S3_ENDPOINT}
            - BOT_SERVICE_URL=${BOT_SERVICE_URL}
            - SMTP_MAIL=${SMTP_MAIL}
            - SMTP_PASSWORD=${SMTP_PASSWORD}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - LINK_VERIFY_EMAIL=${LINK_VERIFY_EMAIL}
        volumes:
            - .:/app
    bot_chat:
        container_name: bot-chat-service
        image: sherlockvufullsnack/health_care_bot-api:latest
        restart: always
        ports:
            - '8080:8080'
        networks:
            - app-network
    redis:
        container_name: redis_health_care
        image: redis:alpine
        restart: always
        ports:
            - '6379:6379'
        command: redis-server --loglevel warning
        volumes:
            - ./docker-volumes/cache:/data
        networks:
            - app-network

    redis-commander:
        container_name: redis_commander_health_care
        image: ghcr.io/joeferner/redis-commander:latest
        restart: always
        ports:
            - '8081:8081'
        environment:
            - REDIS_HOSTS=local:redis:6379
        networks:
            - app-network

    postgres:
        container_name: postgres_health_care
        image: postgres:13.15
        restart: always
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=health_care
        networks:
            - app-network
    adminer:
        container_name: adminer-lung
        image: adminer
        restart: always
        ports:
            - '9999:8080'
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgresql_master_data:
        driver: local
